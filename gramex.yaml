# Generated by gramex init 1.87.0 (don't delete this line)
# on 2023-04-24 by Author <user@example.org>

# Configurations for app: skills_learned
# ----------------------------------------------------------------------------
url:
  skills_learned-home:
    pattern: /$YAMLURL/
    handler: FileHandler
    kwargs:
      path: $YAMLPATH/index.html
      # See https://gramener.com/gramex/guide/auth/#authorization for auth rules
      auth:
        login_url: /$YAMLURL/login/
      template: ["index.html", "template*.html"]
      headers:
        # Templates may have user-specific content. Cache privately.
        # Keep max-age small (in case we log out & log in as another user.)
        Cache-Control: private, max-age=1
    cache: { expiry: { duration: 1 } }

  skills_learned-login:
    pattern: /$YAMLURL/login/
    # You MUST change the auth before deploying. DBAuth is commonly used.
    # See https://gramener.com/gramex/guide/auth/#database-auth
    handler: SimpleAuth
    kwargs:
      template: $YAMLPATH/login.html
      credentials:
        alpha: alpha
        beta: beta

  skills_learned-get-ipl-team-name:
    pattern: /$YAMLURL/get_ipl_team_name
    handler: FilterHandler
    kwargs:
      url: "sqlite:///D:/Skills_learned/ipl-dashboard/ipl_data.db"
      table: "ipl_all_season_team_players"

  skills_learned-get-total-run-season-wise-by-team:
    pattern: /$YAMLURL/get_total_run_season_wise_by_team
    handler: FormHandler
    kwargs:
      url: "sqlite:///D:/Skills_learned/ipl-dashboard/ipl_data.db"
      query: "SELECT Season, batter as Player, MAX(total_run) as total_run
        FROM (SELECT Season, batter, SUM(batsman_run) AS total_run
        FROM ipl_matches iplM JOIN ipl_scorecard iplS ON iplM.ID = iplS.ID
        GROUP BY  batter, Season ORDER BY Season) INNERQUERY GROUP BY Season"

  skills_learned-get-total-run-season-wise-by-player:
    pattern: /$YAMLURL/get_total_run_season_wise_by_player
    handler: FormHandler
    kwargs:
      url: "sqlite:///D:/Skills_learned/ipl-dashboard/ipl_data.db"
      query: "SELECT Season, BattingTeam as Team, MAX(total_run) as total_run
        FROM (SELECT Season, BattingTeam, SUM(total_run) AS total_run
        FROM ipl_matches iplM JOIN ipl_scorecard iplS ON iplM.ID = iplS.ID
        GROUP BY BattingTeam, Season ORDER BY Season) INNERQUERY GROUP BY Season"

  skills_learned-get-most-six-season-wise-by-player:
    pattern: /$YAMLURL/get_most_six_season_wise_by_player
    handler: FormHandler
    kwargs:
      url: "sqlite:///D:/Skills_learned/ipl-dashboard/ipl_data.db"
      query: "SELECT Season, batter as Player, max(six_count) as six_count
        FROM (SELECT  count(batsman_run) as six_count, batter, Season
        FROM ipl_scorecard iplS
        JOIN ipl_matches iplM ON iplM.ID = iplS.ID
        WHERE batsman_run = 6
        GROUP BY batter, Season) AS INNERQUERY GROUP BY Season"

  skills_learned-get-most-ipl-trophy-won:
    pattern: /$YAMLURL/get_most_ipl_trophy_won
    handler: FormHandler
    kwargs:
      url: "sqlite:///D:/Skills_learned/ipl-dashboard/ipl_data.db"
      query: "SELECT WinningTeam as Team, count(WinningTeam) as winningCount
        from ipl_matches WHERE MatchNumber = 'Final' GROUP BY WinningTeam"

  skills_learned-get-total-run-by-team-season-wise:
    pattern: /$YAMLURL/get_total_run_by_team_season_wise
    handler: FormHandler
    kwargs:
      url: "postgresql://username:password@localhost:5432/ipl_data"
      query: "SELECT Season, BattingTeam, sum(total_run) as total_run
        FROM ipl_scorecard iplS
        JOIN ipl_matches iplM ON iplM.ID = iplS.ID
        GROUP BY BattingTeam, Season ORDER BY Season"

  skills_learned-logout:
    pattern: /$YAMLURL/logout/
    handler: LogoutHandler

# Notify testers what user ID and password to use
test:
  auth:
    user: alpha
    password: alpha

# Gramex init configurations for app: skills_learned
# ----------------------------------------------------------------------------
import:
  # To secure application for production,
  # replace 'YOUR-PROD-SERVER-NAME' with your production server host name.
  deploy if socket.gethostname() in {'YOUR-PROD-SERVER-NAME'}: $GRAMEXPATH/deploy.yaml
  # For alternate methods, see https://gramener.com/gramex/guide/config/#conditions

  # /ui/ has Gramex UI components -- use this like the node_modules/ directory
  ui:
    path: $GRAMEXAPPS/ui/gramex.yaml
    YAMLURL: $YAMLURL/ui/

  # /admin/ as an admin page to manage users, get system info, etc.
  admin:
    path: $GRAMEXAPPS/admin2/gramex.yaml # Note the "admin2" instead of "admin"
    YAMLURL: /$YAMLURL/admin/ # URL to show the admin page at
    ADMIN_KWARGS:
      logo: https://gramener.com/uistatic/gramener.png
      home: /$YAMLURL/
      title: Admin
      theme: "?body-bg=white&navbar-dark-color=rgba(255%2C255%2C255%2C.8)&navbar-dark-hover-color=white"
      # authhandler: name-of-DBAuth-handler    -- required for user management
    ADMIN_AUTH:
      membership:
        hd: gramener.com # Only @gramener.com Google Auth are admins

handlers:
  BaseHandler:
    # Custom error pages for this application
    error:
      400: { path: $YAMLPATH/error/400.html } # Bad request: e.g. URL argument missing
      401: { path: $YAMLPATH/error/401.html } # Unauthorized: User not logged in
      403: { path: $YAMLPATH/error/403.html } # Forbidden: user does not have access
      404: { path: $YAMLPATH/error/404.html } # File not found
      500: { path: $YAMLPATH/error/500.html } # Internal server error
